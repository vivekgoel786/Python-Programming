import pandas as pd
import statsmodels.api as sm
import numpy as np

def fit_mnl_models(df, dep_var='Economy_state_dummy', base_category='Normal'):
    results_list = []

    # Step 1: Encode dependent variable with base category first
    y = df[dep_var].astype('category')
    y = y.cat.reorder_categories([base_category] + [cat for cat in y.cat.categories if cat != base_category], ordered=True)

    # Independent variables: exclude date and dependent variable
    independent_vars = [col for col in df.columns if col not in [dep_var, 'Date']]

    for var in independent_vars:
        # Prepare X and y
        X = df[[var]].copy()
        X = sm.add_constant(X)  # Add intercept
        y_encoded = y.cat.codes  # Convert to numeric categories

        try:
            # Fit the model
            model = sm.MNLogit(y_encoded, X)
            result = model.fit(disp=0)

            # Extract metrics
            for cat in result.params.index.levels[0]:  # For each outcome category
                for beta in result.params.columns:
                    results_list.append({
                        'Variable': var,
                        'Category_vs_Base': cat,
                        'Coefficient': beta,
                        'Beta': result.params.loc[cat, beta],
                        'P-value': result.pvalues.loc[cat, beta],
                        'T-stat': result.tvalues.loc[cat, beta],
                        'Pseudo_R2': result.prsquared,
                        'AIC': result.aic,
                        'BIC': result.bic
                    })

        except Exception as e:
            print(f"Model fitting failed for variable '{var}': {e}")
            continue

    return pd.DataFrame(results_list)
