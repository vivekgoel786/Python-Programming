import pandas as pd
import statsmodels.api as sm

def fit_mnl_models(data, target='Economy_state_dummy', base_category='normal'):
    # Ensure categorical and base category is set
    data[target] = pd.Categorical(data[target])
    data[target] = data[target].cat.reorder_categories(
        [base_category] + [cat for cat in data[target].cat.categories if cat != base_category],
        ordered=False
    )

    results_list = []
    exclude_cols = ['Date', target]
    independent_vars = [col for col in data.columns if col not in exclude_cols]

    for var in independent_vars:
        try:
            sub_data = data[[target, var]].dropna()
            X = sm.add_constant(sub_data[[var]])
            y = sub_data[target]

            model = sm.MNLogit(y, X).fit(disp=False)

            # Loop over each outcome class (excluding base)
            for outcome in model.params.index.levels[0]:
                const_beta = model.params.loc[(outcome, 'const')]
                var_beta = model.params.loc[(outcome, var)]

                const_p = model.pvalues.loc[(outcome, 'const')]
                var_p = model.pvalues.loc[(outcome, var)]

                const_t = model.tvalues.loc[(outcome, 'const')]
                var_t = model.tvalues.loc[(outcome, var)]

                results_list.append({
                    'Level': outcome,
                    'Independent_Var': var,
                    'Const_Beta': const_beta,
                    'Const_P': const_p,
                    'Const_T': const_t,
                    'Var_Beta': var_beta,
                    'Var_P': var_p,
                    'Var_T': var_t,
                    'Pseudo_R2': model.prsquared,
                    'AIC': model.aic,
                    'BIC': model.bic
                })

        except Exception as e:
            print(f"Model failed for variable {var}: {e}")

    return pd.DataFrame(results_list)
