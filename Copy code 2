from scipy.stats import norm

# predicted_probs: shape (n_samples, 3)
# observed: vector of observed classes (0, 1, 2)

rqr = []

for i in range(len(observed)):
    y = observed[i]
    
    # Get cumulative predicted probabilities
    cdf = np.cumsum(predicted_probs[i])
    
    if y == 0:
        lower = 0.0
        upper = cdf[0]
    elif y == 1:
        lower = cdf[0]
        upper = cdf[1]
    elif y == 2:
        lower = cdf[1]
        upper = cdf[2]
    
    # Draw a random uniform value between lower and upper CDF
    #u = np.random.uniform(lower, upper)
    u = (lower + upper) / 2 
    
    # Randomized quantile residual
    r = norm.ppf(u)
    rqr.append(r)

rqr = np.array(rqr)
