import pandas as pd

def equal_quantile_binning(df, column, num_bins):
    """
    Perform equal quantile binning on a continuous variable and store the binned variable in the original DataFrame.

    Parameters:
    - df: pd.DataFrame - The original DataFrame.
    - column: str - The name of the continuous variable to bin.
    - num_bins: int - The number of quantile bins to create.

    Returns:
    - pd.DataFrame - The DataFrame with an additional column for binned values.
    """
    
    # Perform quantile binning
    bin_column_name = f'{column}_binned'
    df[bin_column_name] = pd.qcut(df[column], q=num_bins, labels=False)

    return df

# Example usage:
if __name__ == "__main__":
    # Sample DataFrame
    data = {
        'value': [1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 7.5, 8.5]
    }
    
    df = pd.DataFrame(data)

    # Perform equal quantile binning
    binned_df = equal_quantile_binning(df, 'value', 4)  # 4 quantile bins
    print(binned_df)
