import pandas as pd

def equal_binning(df, column, num_bins):
    """
    Perform equal binning on a continuous variable and store the binned variable in the original DataFrame.

    Parameters:
    - df: pd.DataFrame - The original DataFrame.
    - column: str - The name of the continuous variable to bin.
    - num_bins: int - The number of bins to create.

    Returns:
    - pd.DataFrame - The DataFrame with an additional column for binned values.
    """
    
    # Create bins
    bin_edges = pd.cut(df[column], bins=num_bins, labels=False, retbins=True)[1]
    
    # Assign the bin number to a new column
    bin_column_name = f'{column}_binned'
    df[bin_column_name] = pd.cut(df[column], bins=bin_edges, labels=False)

    return df

# Example usage:
if __name__ == "__main__":
    # Sample DataFrame
    data = {
        'value': [1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 7.5, 8.5]
    }
    
    df = pd.DataFrame(data)

    # Perform equal binning
    binned_df = equal_binning(df, 'value', 3)
    print(binned_df)
