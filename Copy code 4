import pandas as pd
from sklearn.linear_model import LogisticRegression
from sklearn.preprocessing import LabelEncoder

# Assume your DataFrame is already loaded as 'data'
# Set base category 'normal' by reordering and encoding
data['Economy_State_dummy'] = pd.Categorical(data['Economy_State_dummy'], categories=['normal', 'good', 'poor'], ordered=False)
le = LabelEncoder()
y = le.fit_transform(data['Economy_State_dummy'])  # 'normal' will be 1st

# Only using GDP as independent variable
X = data[['GDP']]

# Fit the Multinomial Logistic Regression model
model = LogisticRegression(multi_class='multinomial', solver='lbfgs')
model.fit(X, y)

# Get coefficients
import numpy as np
coef_df = pd.DataFrame(model.coef_, columns=['GDP'])
coef_df['Intercept'] = model.intercept_
coef_df['Target Class'] = le.inverse_transform(np.arange(len(model.classes_)))
coef_df = coef_df[['Target Class', 'Intercept', 'GDP']]

coef_df
