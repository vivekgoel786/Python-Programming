import pandas as pd
import numpy as np
from scipy.stats import entropy

def calculate_entropy(column, num_bins=10):
    # Check if the column is numeric
    if pd.api.types.is_numeric_dtype(column):
        # Bin the continuous variable
        binned_values = pd.cut(column, bins=num_bins, labels=False)
        # Get value counts for the binned variable
        value_counts = np.bincount(binned_values)
    else:
        # For categorical variables, get value counts directly
        value_counts = column.value_counts().values
    
    # Calculate probabilities
    probabilities = value_counts / value_counts.sum()
    
    # Filter out zero probabilities for entropy calculation
    probabilities = probabilities[probabilities > 0]
    
    # Calculate entropy
    return -np.sum(probabilities * np.log2(probabilities))

# Example DataFrame
data = {
    'A': [1, 1, 2, 2, 2, 3],
    'B': ['cat', 'cat', 'dog', 'dog', 'dog', 'mouse'],
    'C': [1, 2, 3, 4, 5, 6]
}
df = pd.DataFrame(data)

# Calculate entropy for each column
entropy_values = df.apply(calculate_entropy)

print(entropy_values)
