def gini_coefficient(y_true, y_prob):
    # Sort the predicted probabilities and the actual values
    sorted_indices = np.argsort(y_prob)
    y_true_sorted = y_true[sorted_indices]
    
    # Calculate the cumulative sums
    cumulative_true = np.cumsum(y_true_sorted)
    
    # Total positive instances
    total_positive = np.sum(y_true_sorted)
    
    # Avoid division by zero
    if total_positive == 0:
        return 0.0
    
    # Normalize cumulative sums
    cumulative_true_normalized = cumulative_true / total_positive
    cumulative_total = np.arange(1, len(y_true_sorted) + 1) / len(y_true_sorted)
    
    # Calculate Gini coefficient
    gini = 2 * np.trapz(cumulative_true_normalized, cumulative_total) - 1
    return gini

# Calculate Gini coefficient
gini = gini_coefficient(y_test.values, y_prob)
print(f"Gini Coefficient: {gini:.4f}")
