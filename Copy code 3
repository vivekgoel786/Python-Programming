import numpy as np
from scipy.stats import norm

# Predicted cumulative probabilities
pred_cdf = res.model.cdf(np.dot(res.model.exog, res.params[:-2])[:, None] - res.params[-2:])

# Function to compute RQRs
def randomized_quantile_residuals(y, pred_probs):
    rqr = []
    for i, yi in enumerate(y):
        # CDF lower and upper bounds
        lower = pred_probs[i, yi-1] if yi > 0 else 0.0
        upper = pred_probs[i, yi]
        
        # Random uniform between bounds
        u = np.random.uniform(lower, upper)
        
        # Normal quantile
        r = norm.ppf(u)
        rqr.append(r)
    return np.array(rqr)

y = df["economy_state"].cat.codes  # convert to 0,1,2 if categorical
probs = res.model.predict(res.params, exog=res.model.exog, which="prob")  # category probs

# Convert to cumulative probs
cdf_probs = probs.cumsum(axis=1)

rqr = randomized_quantile_residuals(y, cdf_probs)